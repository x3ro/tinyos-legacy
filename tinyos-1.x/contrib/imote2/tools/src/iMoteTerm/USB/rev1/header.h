//---------------------------------------------------------------------
// COPYRIGHT (C) 2000-2001, AGILENT TECHNOLOGIES.  ALL RIGHTS RESERVED.
//---------------------------------------------------------------------
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
// KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR
// PURPOSE.
//
//---------------------------------------------------------------------
//
// Last modified: $Date: 2007/03/05 07:40:53 $
//



//
//  A complete JPEG file starts with SOI marker (0xffd8) and ends
//  with EOI marker (0xffd9):
//
//        0xff, 0xd8, {header}, {compressed image data}, 0xff, 0xd9
//
//
//  Prepend the default_header[] below to the compressed data
//  from HDCP-2010.  Skip the first four bytes from the image
//  processor:
//
//        +-------skip----------+
//        0xff, 0xda, 0xQQ, 0xQQ, compressed image data...
//
//
//  This header assumes auto quantization is ~disabled~ and the
//  quantization scale factor is 0x100.
//
//
//  The SOF0 segment below must be modified to match the actual image
//  dimensions and downsample mode.
//
//
//  To change the downsample mode, edit the HSF (horizontal sampling factor)
//  and VSF (vertical sampling factor) for component 1:
//
//     mode
//    ------
//     444:     ->  HSF=1, VSF=1
//     422:     ->  HSF=2, VSF=1
//     411:         non-standard JPEG (do not use)
//
//
//     HSF and VSF for the other two color components should always be 1
//
//
typedef struct {
    BYTE SOI[2];
    BYTE APP0[18];
    
    BYTE QTABLE0[69];
    BYTE QTABLE1[69];
    BYTE QTABLE2[69];
    
    BYTE DCTABLE0[33];
    BYTE DCTABLE1[33];

    BYTE ACTABLE0[183];
    BYTE ACTABLE1[183];
    
    BYTE SOF0[19];
    BYTE SOS[14];
} HEADER_4xx;

HEADER_4xx header_4xx =  {

//
// SOI
//
    {0xff, 0xd8,
    },
//
// APP0 : Length = 16, JFIF v1.01
//
    {
0xff, 0xe0, 0x00, 0x10,
      0x4a, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x00,
      0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
    },
//
// quantization table 0
//
    {
0xff, 0xdb, 0x00, 0x43,

      0x00,
      0x08, 0x10, 0x10, 0x13, 0x10, 0x13, 0x16, 0x16,
      0x16, 0x16, 0x16, 0x16, 0x1a, 0x18, 0x1a, 0x1b,
      0x1b, 0x1b, 0x1a, 0x1a, 0x1a, 0x1a, 0x1b, 0x1b,
      0x1b, 0x1d, 0x1d, 0x1d, 0x22, 0x22, 0x22, 0x1c,
      0x1d, 0x1d, 0x1b, 0x1b, 0x1d, 0x1d, 0x20, 0x20,
      0x22, 0x22, 0x25, 0x26, 0x25, 0x23, 0x23, 0x22,
      0x23, 0x26, 0x26, 0x28, 0x28, 0x28, 0x30, 0x30,
      0x24, 0x2e, 0x38, 0x38, 0x3a, 0x45, 0x45, 0x53,
    },
    {
//
// quantization table 1
//
0xff, 0xdb, 0x00, 0x43,
      0x01,
      0x08, 0x10, 0x10, 0x13, 0x10, 0x13, 0x16, 0x16,
      0x16, 0x16, 0x16, 0x16, 0x1a, 0x18, 0x1a, 0x1b,
      0x1b, 0x1b, 0x1a, 0x1a, 0x1a, 0x1a, 0x1b, 0x1b,
      0x1b, 0x1d, 0x1d, 0x1d, 0x22, 0x22, 0x22, 0x1c,
      0x1d, 0x1d, 0x1b, 0x1b, 0x1d, 0x1d, 0x20, 0x20,
      0x22, 0x22, 0x25, 0x26, 0x25, 0x23, 0x23, 0x22,
      0x23, 0x26, 0x26, 0x28, 0x28, 0x28, 0x30, 0x30,
      0x24, 0x2e, 0x38, 0x38, 0x3a, 0x45, 0x45, 0x53,
    },
//
// quantization table 2
//
    {
0xff, 0xdb, 0x00, 0x43,

      0x02,
      0x08, 0x10, 0x10, 0x13, 0x10, 0x13, 0x16, 0x16,
      0x16, 0x16, 0x16, 0x16, 0x1a, 0x18, 0x1a, 0x1b,
      0x1b, 0x1b, 0x1a, 0x1a, 0x1a, 0x1a, 0x1b, 0x1b,
      0x1b, 0x1d, 0x1d, 0x1d, 0x22, 0x22, 0x22, 0x1c,
      0x1d, 0x1d, 0x1b, 0x1b, 0x1d, 0x1d, 0x20, 0x20,
      0x22, 0x22, 0x25, 0x26, 0x25, 0x23, 0x23, 0x22,
      0x23, 0x26, 0x26, 0x28, 0x28, 0x28, 0x30, 0x30,
      0x24, 0x2e, 0x38, 0x38, 0x3a, 0x45, 0x45, 0x53,

    },
{
//
// DHT : Length = 31,
//
0xff, 0xc4, 0x00, 0x1f,

      // DC Table 0
      0x00,
      0x00, 0x01, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01,
      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
      0x08, 0x09, 0x0a, 0x0b,
},
{
//
// DHT : Length = 31,
//
0xff, 0xc4, 0x00, 0x1f,

      // DC Table 1
      0x01,
      0x00, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
      0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
      0x08, 0x09, 0x0a, 0x0b,
},
{
//
// DHT : Length = 181
//
0xff, 0xc4, 0x00, 0xb5,

      // AC Table 0
      0x10,
      0x00, 0x02, 0x01, 0x03, 0x03, 0x02, 0x04, 0x03,
      0x05, 0x05, 0x04, 0x04, 0x00, 0x00, 0x01, 0x7d,
      0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12,
      0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07,
      0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08,
      0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0,
      0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16,
      0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28,
      0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,
      0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,
      0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59,
      0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,
      0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,
      0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89,
      0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98,
      0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,
      0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6,
      0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5,
      0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4,
      0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2,
      0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea,
      0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
      0xf9, 0xfa,
},
{
//
// DHT : Length = 181
//
0xff, 0xc4, 0x00, 0xb5,

      // AC Table 1
      0x11,
      0x00, 0x02, 0x01, 0x02, 0x04, 0x04, 0x03, 0x04,
      0x07, 0x05, 0x04, 0x04, 0x00, 0x01, 0x02, 0x77,
      0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21,
      0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71,
      0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91,
      0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0,
      0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34,
      0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26,
      0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38,
      0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,
      0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,
      0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
      0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,
      0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
      0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96,
      0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5,
      0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4,
      0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3,
      0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2,
      0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda,
      0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9,
      0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
      0xf9, 0xfa,

},
{
//
// SOF0 : Length = 17,
//
0xff, 0xc0, 0x00, 0x11,

      0x08,              // Sample precision
//      0x00, 0xf0,        // Number of rows = 240    (0xf0)
//      0x01, 0x40,        // Number of columns = 320 (0x140)
      0x00, 96>>1,        // Number of rows
      0x00, 128>>1,        // Number of columns

      0x03,              // Number of components
      0x01, 0x21, 0x00,  // Component 1: HSF= 2, VSF = 1, Q Table = 0
      0x02, 0x11, 0x01,  // Component 2: HSF= 1, VSF = 1, Q Table = 1
      0x03, 0x11, 0x02,  // Component 3: HSF= 1, VSF = 1, Q Table = 2
},
{
//
// SOS : Length = 12,
//
0xff, 0xda, 0x00, 0x0c,

      0x03,          // Number of components
      0x01, 0x00,    // Component 1: DC table 0, AC table 0
      0x02, 0x11,    // Component 2: DC table 1, AC table 1
      0x03, 0x11,    // Component 3: DC table 1, AC table 1
      0x00,          // Start of spectral selection
      0x3f,          // End of spectral selection
      0x00,          // Successive approximation high/low

}

//
//  ------  compressed image data goes here ----------
//



//
// EOI
//
//0xff, 0xd9  (this marker is inserted into data stream by HDCP-2000/2010)

};



typedef struct {
    BYTE SOI[2];
    BYTE APP0[18];
    BYTE QTABLE0[69];
    BYTE DCTABLE0[33];
    BYTE ACTABLE0[183];
    BYTE SOF0[13];
    BYTE SOS[10];
} HEADER_GRAY;

HEADER_GRAY header_gray = {

    // SOI
    { 0xff, 0xd8 },

    // APP0
    { 0xff, 0xe0, 0x00, 0x10,
    
      0x4a, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x00,
      0x00, 0x01, 0x00, 0x01, 0x00, 0x00
    },

    // QTABLE0
    {
      0xff, 0xdb, 0x00, 0x43, 0x00,

      0x08, 0x10, 0x10, 0x13, 0x10, 0x13, 0x16, 0x16,
      0x16, 0x16, 0x16, 0x16, 0x1a, 0x18, 0x1a, 0x1b,
      0x1b, 0x1b, 0x1a, 0x1a, 0x1a, 0x1a, 0x1b, 0x1b,
      0x1b, 0x1d, 0x1d, 0x1d, 0x22, 0x22, 0x22, 0x1c,
      0x1d, 0x1d, 0x1b, 0x1b, 0x1d, 0x1d, 0x20, 0x20,
      0x22, 0x22, 0x25, 0x26, 0x25, 0x23, 0x23, 0x22,
      0x23, 0x26, 0x26, 0x28, 0x28, 0x28, 0x30, 0x30,
      0x24, 0x2e, 0x38, 0x38, 0x3a, 0x45, 0x45, 0x53
    },

    // DCTABLE 0
    {
      0xff, 0xc4, 0x00, 0x1f,

      // DC Table 0
      0x00,
      0x00, 0x01, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01,
      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
      0x08, 0x09, 0x0a, 0x0b
    },

    // ACTABLE 0
    {
      0xff, 0xc4, 0x00, 0xb5,

      0x10,
      0x00, 0x02, 0x01, 0x03, 0x03, 0x02, 0x04, 0x03,
      0x05, 0x05, 0x04, 0x04, 0x00, 0x00, 0x01, 0x7d,
      0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12,
      0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07,
      0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08,
      0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0,
      0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16,
      0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28,
      0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,
      0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,
      0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59,
      0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,
      0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,
      0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89,
      0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98,
      0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,
      0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6,
      0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5,
      0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4,
      0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2,
      0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea,
      0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
      0xf9, 0xfa
    },

    // SOF0
    {
      0xff, 0xc0, 0x00, 0x0b,

      0x08,              // Sample precision
      0x00, 8,           // Number of rows
      0x00, 8,           // Number of columns

      0x01,              // Number of components
      0x01, 0x11, 0x00,  // Component 1: HSF= 1, VSF = 1, Q Table = 0
    },

    // SOS
    { 0xff, 0xda, 0x00, 0x08,

      0x01,          // Number of components
      0x01, 0x00,    // Component 1: DC table 0, AC table 0
      0x00,          // Start of spectral selection
      0x3f,          // End of spectral selection
      0x00,  
    }

};






#define HEADER_LENGTH   sizeof(default_header) / sizeof(unsigned char)



unsigned char gray_header[]= {

//
// SOI
//
0xff, 0xd8,

//
// APP0 : Length = 16, JFIF v1.01
//
0xff, 0xe0, 0x00, 0x10,
      0x4a, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x00,
      0x00, 0x01, 0x00, 0x01, 0x00, 0x00,

//
// quantization table 0
//
0xff, 0xdb, 0x00, 0x43, 0x00,

      0x08, 0x10, 0x10, 0x13, 0x10, 0x13, 0x16, 0x16,
      0x16, 0x16, 0x16, 0x16, 0x1a, 0x18, 0x1a, 0x1b,
      0x1b, 0x1b, 0x1a, 0x1a, 0x1a, 0x1a, 0x1b, 0x1b,
      0x1b, 0x1d, 0x1d, 0x1d, 0x22, 0x22, 0x22, 0x1c,
      0x1d, 0x1d, 0x1b, 0x1b, 0x1d, 0x1d, 0x20, 0x20,
      0x22, 0x22, 0x25, 0x26, 0x25, 0x23, 0x23, 0x22,
      0x23, 0x26, 0x26, 0x28, 0x28, 0x28, 0x30, 0x30,
      0x24, 0x2e, 0x38, 0x38, 0x3a, 0x45, 0x45, 0x53,


////
//// quantization table 1
////
//0xff, 0xdb, 0x00, 0x43, 0x01,
//
//      0x08, 0x10, 0x10, 0x13, 0x10, 0x13, 0x16, 0x16,
//      0x16, 0x16, 0x16, 0x16, 0x1a, 0x18, 0x1a, 0x1b,
//      0x1b, 0x1b, 0x1a, 0x1a, 0x1a, 0x1a, 0x1b, 0x1b,
//      0x1b, 0x1d, 0x1d, 0x1d, 0x22, 0x22, 0x22, 0x1c,
//      0x1d, 0x1d, 0x1b, 0x1b, 0x1d, 0x1d, 0x20, 0x20,
//      0x22, 0x22, 0x25, 0x26, 0x25, 0x23, 0x23, 0x22,
//      0x23, 0x26, 0x26, 0x28, 0x28, 0x28, 0x30, 0x30,
//      0x24, 0x2e, 0x38, 0x38, 0x3a, 0x45, 0x45, 0x53,
//
////
//// quantization table 2
////
//0xff, 0xdb, 0x00, 0x43, 0x02,
//
//      0x08, 0x10, 0x10, 0x13, 0x10, 0x13, 0x16, 0x16,
//      0x16, 0x16, 0x16, 0x16, 0x1a, 0x18, 0x1a, 0x1b,
//      0x1b, 0x1b, 0x1a, 0x1a, 0x1a, 0x1a, 0x1b, 0x1b,
//      0x1b, 0x1d, 0x1d, 0x1d, 0x22, 0x22, 0x22, 0x1c,
//      0x1d, 0x1d, 0x1b, 0x1b, 0x1d, 0x1d, 0x20, 0x20,
//      0x22, 0x22, 0x25, 0x26, 0x25, 0x23, 0x23, 0x22,
//      0x23, 0x26, 0x26, 0x28, 0x28, 0x28, 0x30, 0x30,
//      0x24, 0x2e, 0x38, 0x38, 0x3a, 0x45, 0x45, 0x53,


//
// DHT : Length = 31,
//
0xff, 0xc4, 0x00, 0x1f,

      // DC Table 0
      0x00,
      0x00, 0x01, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01,
      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
      0x08, 0x09, 0x0a, 0x0b,

////
//// DHT : Length = 31,
////
//0xff, 0xc4, 0x00, 0x1f,
//
//      // DC Table 1
//      0x01,
//      0x00, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
//      0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
//      0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
//      0x08, 0x09, 0x0a, 0x0b,

//
// DHT : Length = 181
//
0xff, 0xc4, 0x00, 0xb5,

      // AC Table 0
      0x10,
      0x00, 0x02, 0x01, 0x03, 0x03, 0x02, 0x04, 0x03,
      0x05, 0x05, 0x04, 0x04, 0x00, 0x00, 0x01, 0x7d,
      0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12,
      0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07,
      0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08,
      0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0,
      0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16,
      0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28,
      0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,
      0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,
      0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59,
      0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,
      0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,
      0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89,
      0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98,
      0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,
      0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6,
      0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5,
      0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4,
      0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2,
      0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea,
      0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
      0xf9, 0xfa,

////
//// DHT : Length = 181
////
//0xff, 0xc4, 0x00, 0xb5,
//
//      // AC Table 1
//      0x11,
//      0x00, 0x02, 0x01, 0x02, 0x04, 0x04, 0x03, 0x04,
//      0x07, 0x05, 0x04, 0x04, 0x00, 0x01, 0x02, 0x77,
//      0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21,
//      0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71,
//      0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91,
//      0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0,
//      0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34,
//      0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26,
//      0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38,
//      0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,
//      0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,
//      0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
//      0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,
//      0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
//      0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96,
//      0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5,
//      0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4,
//      0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3,
//      0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2,
//      0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda,
//      0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9,
//      0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
//      0xf9, 0xfa,



////
//// DRI : Restart Interval = 0 MCU
////
//0xff, 0xdd, 0x00, 0x04, 0x00, 0x00,

//
// SOF0 : Length = 11,
//
0xff, 0xc0, 0x00, 0x0b,

      0x08,              // Sample precision
//      0x00, 0xf0,        // Number of rows = 240    (0xf0)
//      0x01, 0x40,        // Number of columns = 320 (0x140)
      0x00, 96>>1,        // Number of rows
      0x00, 128>>1,        // Number of columns

      0x01,              // Number of components
      0x01, 0x11, 0x00,  // Component 1: HSF= 1, VSF = 1, Q Table = 0

//
// SOS : Length = 8,
//
0xff, 0xda, 0x00, 0x08,

      0x03,          // Number of components
      0x01, 0x00,    // Component 1: DC table 0, AC table 0
      0x00,          // Start of spectral selection
      0x3f,          // End of spectral selection
      0x00,          // Successive approximation high/low



//
//  ------  compressed image data goes here ----------
//



//
// EOI
//
//0xff, 0xd9  (this marker is inserted into data stream by HDCP-2000/2010)

};

unsigned char default_header[]= {

//
// SOI
//
0xff, 0xd8,

//
// APP0 : Length = 16, JFIF v1.01
//
0xff, 0xe0, 0x00, 0x10,
      0x4a, 0x46, 0x49, 0x46, 0x00, 0x01, 0x01, 0x00,
      0x00, 0x01, 0x00, 0x01, 0x00, 0x00,

//
// quantization table 0
//
0xff, 0xdb, 0x00, 0x43, 0x00,

      0x08, 0x10, 0x10, 0x13, 0x10, 0x13, 0x16, 0x16,
      0x16, 0x16, 0x16, 0x16, 0x1a, 0x18, 0x1a, 0x1b,
      0x1b, 0x1b, 0x1a, 0x1a, 0x1a, 0x1a, 0x1b, 0x1b,
      0x1b, 0x1d, 0x1d, 0x1d, 0x22, 0x22, 0x22, 0x1c,
      0x1d, 0x1d, 0x1b, 0x1b, 0x1d, 0x1d, 0x20, 0x20,
      0x22, 0x22, 0x25, 0x26, 0x25, 0x23, 0x23, 0x22,
      0x23, 0x26, 0x26, 0x28, 0x28, 0x28, 0x30, 0x30,
      0x24, 0x2e, 0x38, 0x38, 0x3a, 0x45, 0x45, 0x53,


//
// quantization table 1
//
0xff, 0xdb, 0x00, 0x43, 0x01,

      0x08, 0x10, 0x10, 0x13, 0x10, 0x13, 0x16, 0x16,
      0x16, 0x16, 0x16, 0x16, 0x1a, 0x18, 0x1a, 0x1b,
      0x1b, 0x1b, 0x1a, 0x1a, 0x1a, 0x1a, 0x1b, 0x1b,
      0x1b, 0x1d, 0x1d, 0x1d, 0x22, 0x22, 0x22, 0x1c,
      0x1d, 0x1d, 0x1b, 0x1b, 0x1d, 0x1d, 0x20, 0x20,
      0x22, 0x22, 0x25, 0x26, 0x25, 0x23, 0x23, 0x22,
      0x23, 0x26, 0x26, 0x28, 0x28, 0x28, 0x30, 0x30,
      0x24, 0x2e, 0x38, 0x38, 0x3a, 0x45, 0x45, 0x53,

//
// quantization table 2
//
0xff, 0xdb, 0x00, 0x43, 0x02,

      0x08, 0x10, 0x10, 0x13, 0x10, 0x13, 0x16, 0x16,
      0x16, 0x16, 0x16, 0x16, 0x1a, 0x18, 0x1a, 0x1b,
      0x1b, 0x1b, 0x1a, 0x1a, 0x1a, 0x1a, 0x1b, 0x1b,
      0x1b, 0x1d, 0x1d, 0x1d, 0x22, 0x22, 0x22, 0x1c,
      0x1d, 0x1d, 0x1b, 0x1b, 0x1d, 0x1d, 0x20, 0x20,
      0x22, 0x22, 0x25, 0x26, 0x25, 0x23, 0x23, 0x22,
      0x23, 0x26, 0x26, 0x28, 0x28, 0x28, 0x30, 0x30,
      0x24, 0x2e, 0x38, 0x38, 0x3a, 0x45, 0x45, 0x53,


//
// DHT : Length = 31,
//
0xff, 0xc4, 0x00, 0x1f,

      // DC Table 0
      0x00,
      0x00, 0x01, 0x05, 0x01, 0x01, 0x01, 0x01, 0x01,
      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
      0x08, 0x09, 0x0a, 0x0b,

//
// DHT : Length = 31,
//
0xff, 0xc4, 0x00, 0x1f,

      // DC Table 1
      0x01,
      0x00, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
      0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
      0x08, 0x09, 0x0a, 0x0b,

//
// DHT : Length = 181
//
0xff, 0xc4, 0x00, 0xb5,

      // AC Table 0
      0x10,
      0x00, 0x02, 0x01, 0x03, 0x03, 0x02, 0x04, 0x03,
      0x05, 0x05, 0x04, 0x04, 0x00, 0x00, 0x01, 0x7d,
      0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12,
      0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07,
      0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08,
      0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0,
      0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16,
      0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28,
      0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,
      0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,
      0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59,
      0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,
      0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,
      0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89,
      0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98,
      0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,
      0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6,
      0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5,
      0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4,
      0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2,
      0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea,
      0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
      0xf9, 0xfa,

//
// DHT : Length = 181
//
0xff, 0xc4, 0x00, 0xb5,

      // AC Table 1
      0x11,
      0x00, 0x02, 0x01, 0x02, 0x04, 0x04, 0x03, 0x04,
      0x07, 0x05, 0x04, 0x04, 0x00, 0x01, 0x02, 0x77,
      0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21,
      0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71,
      0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91,
      0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0,
      0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34,
      0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26,
      0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38,
      0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,
      0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,
      0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
      0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,
      0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
      0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96,
      0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5,
      0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4,
      0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3,
      0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2,
      0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda,
      0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9,
      0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,
      0xf9, 0xfa,



//
// DRI : Restart Interval = 0 MCU
//
0xff, 0xdd, 0x00, 0x04, 0x00, 0x00,

//
// SOF0 : Length = 17,
//
0xff, 0xc0, 0x00, 0x11,

      0x08,              // Sample precision
//      0x00, 0xf0,        // Number of rows = 240    (0xf0)
//      0x01, 0x40,        // Number of columns = 320 (0x140)
      0x00, 96>>1,        // Number of rows
      0x00, 128>>1,        // Number of columns

      0x03,              // Number of components
      0x01, 0x21, 0x00,  // Component 1: HSF= 2, VSF = 1, Q Table = 0
      0x02, 0x11, 0x01,  // Component 2: HSF= 1, VSF = 1, Q Table = 1
      0x03, 0x11, 0x02,  // Component 3: HSF= 1, VSF = 1, Q Table = 2

//
// SOS : Length = 12,
//
0xff, 0xda, 0x00, 0x0c,

      0x03,          // Number of components
      0x01, 0x00,    // Component 1: DC table 0, AC table 0
      0x02, 0x11,    // Component 2: DC table 1, AC table 1
      0x03, 0x11,    // Component 3: DC table 1, AC table 1
      0x00,          // Start of spectral selection
      0x3f,          // End of spectral selection
      0x00,          // Successive approximation high/low



//
//  ------  compressed image data goes here ----------
//



//
// EOI
//
//0xff, 0xd9  (this marker is inserted into data stream by HDCP-2000/2010)

};

#define HEADER_LENGTH   sizeof(default_header) / sizeof(unsigned char)





#define GRAY_HEADER_LENGTH   sizeof(gray_header) / sizeof(unsigned char)
