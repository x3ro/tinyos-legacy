// $Id: TimerActor.gc,v 1.1 2004/04/14 06:43:20 celaine Exp $

/* Copyright (C) 2003-2004 Palo Alto Research Center
 *
 * The attached "TinyGALS" software is provided to you under the terms and
 * conditions of the GNU General Public License Version 2 as published by the
 * Free Software Foundation.
 *
 * TinyGALS is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with TinyGALS; see the file COPYING.  If not, write to
 * the Free Software Foundation, 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

/*
 * Author: Elaine Cheong <celaine @ users.sourceforge.net>
 * Date: 5 April 2004
 *
 */

/** This actor contains three TinyOS components: Counter, TimerC, and
 *  Trigger.  Counter and Trigger are both connected to a timer.  At
 *  each timer tick, Counter updates the 'count' parameter, and
 *  Trigger sends an empty token to the output port named "trigger".
**/
actor TimerActor {
    port {
        out trigger;
        in outputComplete;
    } parameter {
        uint16_t count;
    }implementation {
        components Counter, TimerC, Trigger;

        Counter.Timer -> TimerC.Timer[unique("Timer")];

        // function -> parameter
        Counter.IntOutput.output -> count;

        // port -> function
        outputComplete -> Counter.IntOutput.outputComplete;
        
        Trigger.Timer -> TimerC.Timer[unique("Timer")];
        Trigger.TimerControl -> TimerC;

        // function -> port
        Trigger.trigger -> trigger;
        
        actorControl {
            // Connect these interfaces to Main for application
            // initialization.
            Counter.StdControl;
            TimerC.StdControl;
            Trigger.StdControl;
        }
    }
}
