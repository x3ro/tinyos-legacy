<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><!-- InstanceBegin template="/Templates/Main.dwt" codeOutsideHTMLIsLocked="false" -->
<head>
<!-- InstanceBeginEditable name="doctitle" -->

<title>Agilla</title>

<!-- InstanceEndEditable -->
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<!-- InstanceBeginEditable name="head" -->

<!-- InstanceEndEditable -->
</head>

<body>
<table width="95%" border="0" align="center" cellpadding="0" cellspacing="0">
  <tr>
    <td><p>&nbsp;</p>
      <table width="100%" border="1" cellspacing="0" cellpadding="0">
        <tr>
          <td width="80%">&nbsp;</td>
        </tr>
        <tr>
          <td><!-- InstanceBeginEditable name="MainText" -->

          <h2><font face="Verdana, Arial, Helvetica, sans-serif">Lesson 2: Injecting an agents into a Network</font></h2>

          <p>This tutorial assumes you have installed Agilla and set the <a href="getting_started.htm#AgillaAliases">aliases</a>            as

            described in <a href="getting_started.htm">Tutorial Lesson 1</a>.            </p>

          <h3>Conventions:</h3>

          <ol>

            <li>&lt;agilla&gt; is the location

                  of Agilla's NesC files, typically <em>/opt/tinyos-1.x/myApps/Agilla</em> and

                    is quickly reached by typing <em>cda</em>.</li>

            <li>&lt;tos&gt; is the root location of Tinyos, typically <em>/opt/tinyos-1.x/</em>              and is quickly reached by typing <em>cdtos</em>.</li>

            </ol>

          <h3>Example Agents:</h3>

          <p>Agilla comes with several example agents in &lt;agilla&gt;/Examples.

            Each file is one agent. Some

            of the simpler ones include:</p>

          <ol>

            <li>3Blink.ma - Blinks all three LEDs three times, pauses, repeats</li>

            <li>              Bounce0to1.ma - An agent that bounces between nodes

              (0,0) and (1,1), blinking the red LED on each node when it arrives.</li>

            <li>Bounce1to2.ma - An agent that bounces between nodes

              (1,1) and (2,1), blinking the red LED on each node when it arrives.</li>

            <li>CntToLedsHP.ma - Count up using the heap to store the counter,

              displays the last three bits of the counter on the LEDs.</li>

            <li>CntToLedsTS.ma - Count up using a tuple to store the counter,

              displays the last three bits of the counter on the LEDs.</li>

            <li>RandomWalk.ma - Randomly walks around the network, blinking all

              LEDs three times upon arrival.</li>

            <li>Traverse column.ma - Moves down a column of nodes, each time

              turning on the red LED.</li>

            <li>Traverse perimeter.ma - Traverses the perimeter of the network

              in a counter-clockwise fashion, each time turning on the red LED.</li>

            <li>Traverse row.ma - Moves down a row, each time

              turning on the red LED.</li>

            <li>VisitAll_L2R.ma - Visits every node in the network by sequentially

              cloning itself on each row from left to right. Blinks the green

              LED after cloning itself.</li>

          </ol>

          <h3>Injecting an Agent</h3>

          <p>To inject an agent into the network, you have

            open them using the AgentInjector, and select the destination location.</p>

          <ol>

            <li>Run the Agent Injector by typing <font face="Courier New, Courier, mono">ri</font>.

              You should see:<br>

              <br>

              <img src="injector.jpg" width="510" height="496"><br>

              <br>

            </li>

            <li>Go to File, Open, and choose <em>3Blink.ma</em>.

                    You should see the following:<br>

                    <br>

                    <img src="3blink_injector.jpg" width="506" height="513"><br>

                    <br>

            </li>

            <li>            The instructions shown in the main text area are

              the 3Blink agent's.             3Blink simply blinks all 3 LEDs

              three times, pauses, and repeats. Below this text area is a panel

              that allows you to specify which location to inject the agents

              into. Currently, it's set to node (0,0) which has an TOS Address

              of 0. The location and TOS Address are related as described <a href="../network_topology.htm">here</a>.

              If this is not correct, check the

              size

              of the network by going to

              <em>WSN </em>and selecting <em>Grid Size</em>. </li>

            <li>Hit the Inject

                Agent! button at the bottom of the Agent Injector and the

              agent should be injected into the network. If you selected a destination

              location that is several hops away, you should be able to monitor

              its progress by seeing the green and red LEDs blink for half a

              second as the agent bounces off a node. You can disable

              this indicator by commenting out <em>#define SHOW_BOUNCE_LED</em> in <em>&lt;agilla&gt;/types/Agilla.h</em> (Note:

              You will have to reinstall Agilla on all of the motes for this

              to take effect). When the 

              arrives, the 3 LEDs should repeately

              blink 3 times. </li>

          </ol>

          <br>

        <!-- InstanceEndEditable --></td>
        </tr>
        <tr>
          <td width="80%" cellpadding="2" cellspacing="2" bgcolor="#990000">&nbsp;           </td>
        </tr>
      </table></td>
  </tr>
</table>
<hr>This work is supported by the <a href="http://formal.cs.uiuc.edu/contessa">ONR MURI Project CONTESSA</a> 
and the <a href="http://www.nsf.gov/">NSF</a> under grant number CCR-9970939.
</body>
<!-- InstanceEnd --></html>
