Roadmap, with no timelines:
  
* Installation script/program?  Or keep it manual?
  
* External Java support - 
  - Ability to add in your own Java programs running on the computer side
    to interact with the mote
  - Those Java programs should interact with the test result collection system
    to assert failures just like the embedded side can.
  - This will help test serial integration issues.
    > UartStream
    > UartByte
    > Serial Stack integration
    > Application serial interaction
  - There are security issues involved

* A layer that allows a test to easily intercept or inject messages in the
  radio and serial stacks. Easy to do, it just takes time.

* Better message exfil support while maintaining a low RAM footprint
  - Tried a single-phase serial stack.  It worked, but not as well as I hoped.
    > UartByte was broken on msp430, atm128 was just fixed.
    > Using the actual serial stack breaks when using UartByte for single
      phase serial access.
  
* Power measurement and profiling during testing 

* Test bed support, but we need a test bed first to figure out how to do that.

* Make the tests less linear and more threaded producer/consumer to cut down on test time:
  - Producer compiling the next test(s) while the consumer is running the current test
  - Installation to multiple motes simultaneously, instead of one at a time


* Your thoughts?

