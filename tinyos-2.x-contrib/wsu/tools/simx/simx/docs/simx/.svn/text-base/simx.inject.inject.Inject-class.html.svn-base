<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>simx.inject.inject.Inject</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        Package&nbsp;simx ::
        <a href="simx.inject-module.html">Package&nbsp;inject</a> ::
        <a href="simx.inject.inject-module.html">Module&nbsp;inject</a> ::
        Class&nbsp;Inject
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="simx.inject.inject.Inject-class.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<!-- ==================== CLASS DESCRIPTION ==================== -->
<h1 class="epydoc">Class Inject</h1><p class="nomargin-top"><span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject">source&nbsp;code</a></span></p>
<pre class="base-tree">
asyncore.dispatcher --+
                      |
                     <strong class="uidshort">Inject</strong>
</pre>

<hr />
<p>Select-dispatch to move packets across sf-compatible streams.</p>

<!-- ==================== INSTANCE METHODS ==================== -->
<a name="section-InstanceMethods"></a>
<table class="summary" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr bgcolor="#70b0f0" class="table-header">
  <td colspan="2" class="table-header">
    <table border="0" cellpadding="0" cellspacing="0" width="100%">
      <tr valign="top">
        <td align="left"><span class="table-header">Instance Methods</span></td>
        <td align="right" valign="top"
         ><span class="options">[<a href="#section-InstanceMethods"
         class="privatelink" onclick="toggle_private();"
         >hide private</a>]</span></td>
      </tr>
    </table>
  </td>
</tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="simx.inject.inject.Inject-class.html#__init__" class="summary-sig-name">__init__</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">port</span>,
        <span class="summary-sig-arg">bridge_port</span>=<span class="summary-sig-default">None</span>,
        <span class="summary-sig-arg">queue_in_size</span>=<span class="summary-sig-default">1500</span>,
        <span class="summary-sig-arg">queue_out_size</span>=<span class="summary-sig-default">1500</span>)</span><br />
      Initialize.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.__init__">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr class="private">
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a name="_init_bridge"></a><span class="summary-sig-name">_init_bridge</span>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">bridge_addr</span>)</span><br />
      Setup bridge socket.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject._init_bridge">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr class="private">
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a name="_init_server"></a><span class="summary-sig-name">_init_server</span>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">server_addr</span>)</span><br />
      Setup server socket.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject._init_server">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr class="private">
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="simx.inject.inject.Inject-class.html#_init_trigger" class="summary-sig-name" onclick="show_private();">_init_trigger</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">server_addr</span>)</span><br />
      Setup trigger socket.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject._init_trigger">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr class="private">
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a name="_message_to_packet"></a><span class="summary-sig-name">_message_to_packet</span>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">msg</span>,
        <span class="summary-sig-arg">dest</span>=<span class="summary-sig-default">65535</span>,
        <span class="summary-sig-arg">group</span>=<span class="summary-sig-default">170</span>)</span><br />
      Wraps a message in an AM (Serial) packet.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject._message_to_packet">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr class="private">
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a name="_send_queued_packets"></a><span class="summary-sig-name">_send_queued_packets</span>(<span class="summary-sig-arg">self</span>)</span><br />
      Flush all queued out packets onto the wire.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject._send_queued_packets">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr class="private">
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="simx.inject.inject.Inject-class.html#_thread_pump" class="summary-sig-name" onclick="show_private();">_thread_pump</a>(<span class="summary-sig-arg">self</span>)</span><br />
      Pump that runs inside the dispatch thread.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject._thread_pump">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a name="attach_conn"></a><span class="summary-sig-name">attach_conn</span>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">conn</span>)</span><br />
      Attach a connections.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.attach_conn">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a name="detach_conn"></a><span class="summary-sig-name">detach_conn</span>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">conn</span>)</span><br />
      Remove a connection.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.detach_conn">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="simx.inject.inject.Inject-class.html#handle_accept" class="summary-sig-name">handle_accept</a>(<span class="summary-sig-arg">self</span>)</span><br />
      Process new connections (sf-client or trigger) -- asyncore callback.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.handle_accept">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="simx.inject.inject.Inject-class.html#inject" class="summary-sig-name">inject</a>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">message</span>,
        <span class="summary-sig-arg">target</span>=<span class="summary-sig-default">None</span>)</span><br />
      Inject a message.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.inject">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a name="packet_read"></a><span class="summary-sig-name">packet_read</span>(<span class="summary-sig-arg">self</span>,
        <span class="summary-sig-arg">conn</span>,
        <span class="summary-sig-arg">packet</span>)</span><br />
      Read in a packet and dispatch -- asyncore callback.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.packet_read">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="simx.inject.inject.Inject-class.html#read_packets" class="summary-sig-name">read_packets</a>(<span class="summary-sig-arg">self</span>)</span><br />
      Returns a list of (client, packet) for all incoming packets.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.read_packets">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
      <table width="100%" cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td><span class="summary-sig"><a href="simx.inject.inject.Inject-class.html#start" class="summary-sig-name">start</a>(<span class="summary-sig-arg">self</span>)</span><br />
      Spawn a thread and start running the injection bridge.</td>
          <td align="right" valign="top">
            <span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.start">source&nbsp;code</a></span>
            
          </td>
        </tr>
      </table>
      
    </td>
  </tr>
  <tr>
    <td colspan="2" class="summary">
    <p class="indent-wrapped-lines"><b>Inherited from <code>asyncore.dispatcher</code></b>:
      <code>__getattr__</code>,
      <code>__repr__</code>,
      <code>accept</code>,
      <code>add_channel</code>,
      <code>bind</code>,
      <code>close</code>,
      <code>connect</code>,
      <code>create_socket</code>,
      <code>del_channel</code>,
      <code>handle_close</code>,
      <code>handle_connect</code>,
      <code>handle_error</code>,
      <code>handle_expt</code>,
      <code>handle_expt_event</code>,
      <code>handle_read</code>,
      <code>handle_read_event</code>,
      <code>handle_write</code>,
      <code>handle_write_event</code>,
      <code>listen</code>,
      <code>log_info</code>,
      <code>readable</code>,
      <code>recv</code>,
      <code>send</code>,
      <code>set_reuse_addr</code>,
      <code>set_socket</code>,
      <code>writable</code>
      </p>
    </td>
  </tr>
</table>
<!-- ==================== CLASS VARIABLES ==================== -->
<a name="section-ClassVariables"></a>
<table class="summary" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr bgcolor="#70b0f0" class="table-header">
  <td colspan="2" class="table-header">
    <table border="0" cellpadding="0" cellspacing="0" width="100%">
      <tr valign="top">
        <td align="left"><span class="table-header">Class Variables</span></td>
        <td align="right" valign="top"
         ><span class="options">[<a href="#section-ClassVariables"
         class="privatelink" onclick="toggle_private();"
         >hide private</a>]</span></td>
      </tr>
    </table>
  </td>
</tr>
<tr>
    <td width="15%" align="right" valign="top" class="summary">
      <span class="summary-type">&nbsp;</span>
    </td><td class="summary">
        <a name="log"></a><span class="summary-name">log</span> = <code title="&lt;logging.Logger instance at 0x16b2560&gt;">&lt;logging.Logger instance at 0x16b2560&gt;</code>
    </td>
  </tr>
  <tr>
    <td colspan="2" class="summary">
    <p class="indent-wrapped-lines"><b>Inherited from <code>asyncore.dispatcher</code></b>:
      <code>accepting</code>,
      <code>addr</code>,
      <code>closing</code>,
      <code>connected</code>,
      <code>debug</code>
      </p>
    </td>
  </tr>
</table>
<!-- ==================== METHOD DETAILS ==================== -->
<a name="section-MethodDetails"></a>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr bgcolor="#70b0f0" class="table-header">
  <td colspan="2" class="table-header">
    <table border="0" cellpadding="0" cellspacing="0" width="100%">
      <tr valign="top">
        <td align="left"><span class="table-header">Method Details</span></td>
        <td align="right" valign="top"
         ><span class="options">[<a href="#section-MethodDetails"
         class="privatelink" onclick="toggle_private();"
         >hide private</a>]</span></td>
      </tr>
    </table>
  </td>
</tr>
</table>
<a name="__init__"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">__init__</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">port</span>,
        <span class="sig-arg">bridge_port</span>=<span class="sig-default">None</span>,
        <span class="sig-arg">queue_in_size</span>=<span class="sig-default">1500</span>,
        <span class="sig-arg">queue_out_size</span>=<span class="sig-default">1500</span>)</span>
    <br /><em class="fname">(Constructor)</em>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.__init__">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Initialize.</p>
  <p>port specifies the IP port to listen on. bridge_port is used for 
  briding to an existing serial-forward (such as that provided by 
  sim-sf).</p>
  <p>queue_in_size and queue_out_size limit the maximum number of queued 
  elements. A size of zero specified that there is no limit. When the 
  queues fill up a warning is generated and the oldest element is 
  dropped.</p>
  <dl class="fields">
    <dt>Overrides:
        asyncore.dispatcher.__init__
    </dt>
  </dl>
</td></tr></table>
</div>
<a name="_init_trigger"></a>
<div class="private">
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">_init_trigger</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">server_addr</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject._init_trigger">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Setup trigger socket.</p>
  <p>The trigger is used to interrupt the asyncore loop and force 
  examination of the message queue.</p>
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="_thread_pump"></a>
<div class="private">
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">_thread_pump</span>(<span class="sig-arg">self</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject._thread_pump">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Pump that runs inside the dispatch thread. This never normally 
  terminates.</p>
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="handle_accept"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">handle_accept</span>(<span class="sig-arg">self</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.handle_accept">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Process new connections (sf-client or trigger) -- asyncore 
  callback.</p>
  <dl class="fields">
    <dt>Overrides:
        asyncore.dispatcher.handle_accept
    </dt>
  </dl>
</td></tr></table>
</div>
<a name="inject"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">inject</span>(<span class="sig-arg">self</span>,
        <span class="sig-arg">message</span>,
        <span class="sig-arg">target</span>=<span class="sig-default">None</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.inject">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Inject a message.</p>
  <p>The message is sent to target. If target is None the message is sent 
  to everyone. This is safe to call outside the event thread.</p>
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="read_packets"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">read_packets</span>(<span class="sig-arg">self</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.read_packets">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Returns a list of (client, packet) for all incoming packets.</p>
  <p>The packets are removed from the incoming queue and have the AM 
  (Serial) header stripped.</p>
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<a name="start"></a>
<div>
<table class="details" border="1" cellpadding="3"
       cellspacing="0" width="100%" bgcolor="white">
<tr><td>
  <table width="100%" cellpadding="0" cellspacing="0" border="0">
  <tr valign="top"><td>
  <h3 class="epydoc"><span class="sig"><span class="sig-name">start</span>(<span class="sig-arg">self</span>)</span>
  </h3>
  </td><td align="right" valign="top"
    ><span class="codelink"><a href="simx.inject.inject-pysrc.html#Inject.start">source&nbsp;code</a></span>&nbsp;
    </td>
  </tr></table>
  
  <p>Spawn a thread and start running the injection bridge.</p>
  <p>Returns self.</p>
  <dl class="fields">
  </dl>
</td></tr></table>
</div>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Wed Aug 12 00:17:36 2009
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
