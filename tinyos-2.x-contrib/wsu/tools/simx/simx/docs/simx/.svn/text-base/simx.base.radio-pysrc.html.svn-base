<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>simx.base.radio</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        Package&nbsp;simx ::
        <a href="simx.base-module.html">Package&nbsp;base</a> ::
        Module&nbsp;radio
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="simx.base.radio-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="simx.base.radio-module.html">Module simx.base.radio</a></h1>
<pre class="py-src">
<a name="RadioRedirect"></a><div id="RadioRedirect-def"><a name="L1"></a><tt class="py-lineno"> 1</tt> <a class="py-toggle" href="#" id="RadioRedirect-toggle" onclick="return toggle('RadioRedirect');">-</a><tt class="py-line"><tt class="py-keyword">class</tt> <a class="py-def-name" href="simx.base.radio.RadioRedirect-class.html">RadioRedirect</a><tt class="py-op">(</tt><tt class="py-base-class">object</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="RadioRedirect-collapsed" style="display:none;" pad="++" indent="++++"></div><div id="RadioRedirect-expanded"><a name="L2"></a><tt class="py-lineno"> 2</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L3"></a><tt class="py-lineno"> 3</tt>  <tt class="py-line"><tt class="py-docstring">    This 'radio' object intercepts calls and redirects them to the</tt> </tt>
<a name="L4"></a><tt class="py-lineno"> 4</tt>  <tt class="py-line"><tt class="py-docstring">    appropriate node. That is, it allows the old Tossim radio</tt> </tt>
<a name="L5"></a><tt class="py-lineno"> 5</tt>  <tt class="py-line"><tt class="py-docstring">    interface to be used.</tt> </tt>
<a name="L6"></a><tt class="py-lineno"> 6</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L7"></a><tt class="py-lineno"> 7</tt>  <tt class="py-line"> </tt>
<a name="RadioRedirect.__init__"></a><div id="RadioRedirect.__init__-def"><a name="L8"></a><tt class="py-lineno"> 8</tt> <a class="py-toggle" href="#" id="RadioRedirect.__init__-toggle" onclick="return toggle('RadioRedirect.__init__');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="simx.base.radio.RadioRedirect-class.html#__init__">__init__</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">real_radio</tt><tt class="py-op">,</tt> <tt class="py-param">tossim_base</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="RadioRedirect.__init__-collapsed" style="display:none;" pad="++" indent="++++++++"></div><div id="RadioRedirect.__init__-expanded"><a name="L9"></a><tt class="py-lineno"> 9</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-0" class="py-name" targets="Module simx.base.tossim=simx.base.tossim-module.html"><a title="simx.base.tossim" class="py-name" href="#" onclick="return doclink('link-0', 'tossim', 'link-0');">tossim</a></tt> <tt class="py-op">=</tt> <tt class="py-name">tossim_base</tt> </tt>
<a name="L10"></a><tt class="py-lineno">10</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-1" class="py-name" targets="Module simx.base.radio=simx.base.radio-module.html,Method simx.base.tossim.TossimBase.radio()=simx.base.tossim.TossimBase-class.html#radio"><a title="simx.base.radio
simx.base.tossim.TossimBase.radio" class="py-name" href="#" onclick="return doclink('link-1', 'radio', 'link-1');">radio</a></tt> <tt class="py-op">=</tt> <tt class="py-name">real_radio</tt> </tt>
</div><a name="L11"></a><tt class="py-lineno">11</tt>  <tt class="py-line"> </tt>
<a name="L12"></a><tt class="py-lineno">12</tt>  <tt class="py-line">     </tt>
<a name="RadioRedirect.threshold"></a><div id="RadioRedirect.threshold-def"><a name="L13"></a><tt class="py-lineno">13</tt> <a class="py-toggle" href="#" id="RadioRedirect.threshold-toggle" onclick="return toggle('RadioRedirect.threshold');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="simx.base.radio.RadioRedirect-class.html#threshold">threshold</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="RadioRedirect.threshold-collapsed" style="display:none;" pad="++" indent="++++++++"></div><div id="RadioRedirect.threshold-expanded"><a name="L14"></a><tt class="py-lineno">14</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L15"></a><tt class="py-lineno">15</tt>  <tt class="py-line"><tt class="py-docstring">        Returns the CCA threshold.</tt> </tt>
<a name="L16"></a><tt class="py-lineno">16</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L17"></a><tt class="py-lineno">17</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-2" class="py-name"><a title="simx.base.radio
simx.base.tossim.TossimBase.radio" class="py-name" href="#" onclick="return doclink('link-2', 'radio', 'link-1');">radio</a></tt><tt class="py-op">.</tt><tt id="link-3" class="py-name" targets="Method simx.base.radio.RadioRedirect.threshold()=simx.base.radio.RadioRedirect-class.html#threshold"><a title="simx.base.radio.RadioRedirect.threshold" class="py-name" href="#" onclick="return doclink('link-3', 'threshold', 'link-3');">threshold</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
</div><a name="L18"></a><tt class="py-lineno">18</tt>  <tt class="py-line">             </tt>
<a name="L19"></a><tt class="py-lineno">19</tt>  <tt class="py-line"> </tt>
<a name="RadioRedirect.setThreshold"></a><div id="RadioRedirect.setThreshold-def"><a name="L20"></a><tt class="py-lineno">20</tt> <a class="py-toggle" href="#" id="RadioRedirect.setThreshold-toggle" onclick="return toggle('RadioRedirect.setThreshold');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="simx.base.radio.RadioRedirect-class.html#setThreshold">setThreshold</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">val</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="RadioRedirect.setThreshold-collapsed" style="display:none;" pad="++" indent="++++++++"></div><div id="RadioRedirect.setThreshold-expanded"><a name="L21"></a><tt class="py-lineno">21</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L22"></a><tt class="py-lineno">22</tt>  <tt class="py-line"><tt class="py-docstring">        Sets the CCA threshold.</tt> </tt>
<a name="L23"></a><tt class="py-lineno">23</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L24"></a><tt class="py-lineno">24</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-4" class="py-name"><a title="simx.base.radio
simx.base.tossim.TossimBase.radio" class="py-name" href="#" onclick="return doclink('link-4', 'radio', 'link-1');">radio</a></tt><tt class="py-op">.</tt><tt id="link-5" class="py-name" targets="Method simx.base.radio.RadioRedirect.setThreshold()=simx.base.radio.RadioRedirect-class.html#setThreshold"><a title="simx.base.radio.RadioRedirect.setThreshold" class="py-name" href="#" onclick="return doclink('link-5', 'setThreshold', 'link-5');">setThreshold</a></tt><tt class="py-op">(</tt><tt class="py-name">val</tt><tt class="py-op">)</tt> </tt>
</div><a name="L25"></a><tt class="py-lineno">25</tt>  <tt class="py-line"> </tt>
<a name="L26"></a><tt class="py-lineno">26</tt>  <tt class="py-line">    <tt class="py-name">set_threshold</tt> <tt class="py-op">=</tt> <tt id="link-6" class="py-name"><a title="simx.base.radio.RadioRedirect.setThreshold" class="py-name" href="#" onclick="return doclink('link-6', 'setThreshold', 'link-5');">setThreshold</a></tt> </tt>
<a name="L27"></a><tt class="py-lineno">27</tt>  <tt class="py-line"> </tt>
<a name="L28"></a><tt class="py-lineno">28</tt>  <tt class="py-line"> </tt>
<a name="RadioRedirect.add"></a><div id="RadioRedirect.add-def"><a name="L29"></a><tt class="py-lineno">29</tt> <a class="py-toggle" href="#" id="RadioRedirect.add-toggle" onclick="return toggle('RadioRedirect.add');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="simx.base.radio.RadioRedirect-class.html#add">add</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">src</tt><tt class="py-op">,</tt> <tt class="py-param">dst</tt><tt class="py-op">,</tt> <tt class="py-param">gain</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="RadioRedirect.add-collapsed" style="display:none;" pad="++" indent="++++++++"></div><div id="RadioRedirect.add-expanded"><a name="L30"></a><tt class="py-lineno">30</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L31"></a><tt class="py-lineno">31</tt>  <tt class="py-line"><tt class="py-docstring">        Add a link from src -&gt; dst of gain.</tt> </tt>
<a name="L32"></a><tt class="py-lineno">32</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L33"></a><tt class="py-lineno">33</tt>  <tt class="py-line">        <tt class="py-name">src_node</tt><tt class="py-op">,</tt> <tt class="py-name">dst_node</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-7" class="py-name"><a title="simx.base.tossim" class="py-name" href="#" onclick="return doclink('link-7', 'tossim', 'link-0');">tossim</a></tt><tt class="py-op">[</tt><tt class="py-name">src</tt><tt class="py-op">]</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-8" class="py-name"><a title="simx.base.tossim" class="py-name" href="#" onclick="return doclink('link-8', 'tossim', 'link-0');">tossim</a></tt><tt class="py-op">[</tt><tt class="py-name">dst</tt><tt class="py-op">]</tt> </tt>
<a name="L34"></a><tt class="py-lineno">34</tt>  <tt class="py-line">        <tt class="py-name">src_node</tt><tt class="py-op">.</tt><tt id="link-9" class="py-name" targets="Method simx.base.node.Node.link()=simx.base.node.Node-class.html#link"><a title="simx.base.node.Node.link" class="py-name" href="#" onclick="return doclink('link-9', 'link', 'link-9');">link</a></tt><tt class="py-op">(</tt><tt class="py-name">dst_node</tt><tt class="py-op">,</tt> <tt id="link-10" class="py-name" targets="Method simx.base.radio.RadioRedirect.gain()=simx.base.radio.RadioRedirect-class.html#gain,Method simx.dyntopo.Link.BasicLinkModel.gain()=simx.dyntopo.Link.BasicLinkModel-class.html#gain,Method simx.dyntopo.Manager.NodeManager.gain()=simx.dyntopo.Manager.NodeManager-class.html#gain,Method simx.dyntopo.Topo.GenericTopo.gain()=simx.dyntopo.Topo.GenericTopo-class.html#gain"><a title="simx.base.radio.RadioRedirect.gain
simx.dyntopo.Link.BasicLinkModel.gain
simx.dyntopo.Manager.NodeManager.gain
simx.dyntopo.Topo.GenericTopo.gain" class="py-name" href="#" onclick="return doclink('link-10', 'gain', 'link-10');">gain</a></tt><tt class="py-op">)</tt> </tt>
</div><a name="L35"></a><tt class="py-lineno">35</tt>  <tt class="py-line"> </tt>
<a name="L36"></a><tt class="py-lineno">36</tt>  <tt class="py-line"> </tt>
<a name="RadioRedirect.remove"></a><div id="RadioRedirect.remove-def"><a name="L37"></a><tt class="py-lineno">37</tt> <a class="py-toggle" href="#" id="RadioRedirect.remove-toggle" onclick="return toggle('RadioRedirect.remove');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="simx.base.radio.RadioRedirect-class.html#remove">remove</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">src</tt><tt class="py-op">,</tt> <tt class="py-param">dst</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="RadioRedirect.remove-collapsed" style="display:none;" pad="++" indent="++++++++"></div><div id="RadioRedirect.remove-expanded"><a name="L38"></a><tt class="py-lineno">38</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L39"></a><tt class="py-lineno">39</tt>  <tt class="py-line"><tt class="py-docstring">        Remove the src -&gt; dst link.</tt> </tt>
<a name="L40"></a><tt class="py-lineno">40</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L41"></a><tt class="py-lineno">41</tt>  <tt class="py-line">        <tt class="py-name">src_node</tt><tt class="py-op">,</tt> <tt class="py-name">dst_node</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-11" class="py-name"><a title="simx.base.tossim" class="py-name" href="#" onclick="return doclink('link-11', 'tossim', 'link-0');">tossim</a></tt><tt class="py-op">[</tt><tt class="py-name">src</tt><tt class="py-op">]</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-12" class="py-name"><a title="simx.base.tossim" class="py-name" href="#" onclick="return doclink('link-12', 'tossim', 'link-0');">tossim</a></tt><tt class="py-op">[</tt><tt class="py-name">dst</tt><tt class="py-op">]</tt> </tt>
<a name="L42"></a><tt class="py-lineno">42</tt>  <tt class="py-line">        <tt class="py-name">src_node</tt><tt class="py-op">.</tt><tt id="link-13" class="py-name" targets="Method simx.base.node.Node.unlink()=simx.base.node.Node-class.html#unlink"><a title="simx.base.node.Node.unlink" class="py-name" href="#" onclick="return doclink('link-13', 'unlink', 'link-13');">unlink</a></tt><tt class="py-op">(</tt><tt class="py-name">dst_node</tt><tt class="py-op">)</tt> </tt>
</div><a name="L43"></a><tt class="py-lineno">43</tt>  <tt class="py-line"> </tt>
<a name="L44"></a><tt class="py-lineno">44</tt>  <tt class="py-line"> </tt>
<a name="RadioRedirect.connected"></a><div id="RadioRedirect.connected-def"><a name="L45"></a><tt class="py-lineno">45</tt> <a class="py-toggle" href="#" id="RadioRedirect.connected-toggle" onclick="return toggle('RadioRedirect.connected');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="simx.base.radio.RadioRedirect-class.html#connected">connected</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">src</tt><tt class="py-op">,</tt> <tt class="py-param">dst</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="RadioRedirect.connected-collapsed" style="display:none;" pad="++" indent="++++++++"></div><div id="RadioRedirect.connected-expanded"><a name="L46"></a><tt class="py-lineno">46</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L47"></a><tt class="py-lineno">47</tt>  <tt class="py-line"><tt class="py-docstring">        Returns true IFF src and dst are the same or src -&gt; dst is</tt> </tt>
<a name="L48"></a><tt class="py-lineno">48</tt>  <tt class="py-line"><tt class="py-docstring">        connected.</tt> </tt>
<a name="L49"></a><tt class="py-lineno">49</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L50"></a><tt class="py-lineno">50</tt>  <tt class="py-line">        <tt class="py-name">src_node</tt><tt class="py-op">,</tt> <tt class="py-name">dst_node</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-14" class="py-name"><a title="simx.base.tossim" class="py-name" href="#" onclick="return doclink('link-14', 'tossim', 'link-0');">tossim</a></tt><tt class="py-op">[</tt><tt class="py-name">src</tt><tt class="py-op">]</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-15" class="py-name"><a title="simx.base.tossim" class="py-name" href="#" onclick="return doclink('link-15', 'tossim', 'link-0');">tossim</a></tt><tt class="py-op">[</tt><tt class="py-name">dst</tt><tt class="py-op">]</tt> </tt>
<a name="L51"></a><tt class="py-lineno">51</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">src_node</tt> <tt class="py-keyword">is</tt> <tt class="py-name">dst_node</tt>  </tt>
<a name="L52"></a><tt class="py-lineno">52</tt>  <tt class="py-line">            <tt class="py-keyword">or</tt> <tt class="py-name">src_node</tt><tt class="py-op">.</tt><tt id="link-16" class="py-name" targets="Method simx.base.node.Node.get_link()=simx.base.node.Node-class.html#get_link"><a title="simx.base.node.Node.get_link" class="py-name" href="#" onclick="return doclink('link-16', 'get_link', 'link-16');">get_link</a></tt><tt class="py-op">(</tt><tt class="py-name">dst_node</tt><tt class="py-op">)</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L53"></a><tt class="py-lineno">53</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-name">True</tt> </tt>
</div><a name="L54"></a><tt class="py-lineno">54</tt>  <tt class="py-line"> </tt>
<a name="L55"></a><tt class="py-lineno">55</tt>  <tt class="py-line"> </tt>
<a name="RadioRedirect.gain"></a><div id="RadioRedirect.gain-def"><a name="L56"></a><tt class="py-lineno">56</tt> <a class="py-toggle" href="#" id="RadioRedirect.gain-toggle" onclick="return toggle('RadioRedirect.gain');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="simx.base.radio.RadioRedirect-class.html#gain">gain</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">src</tt><tt class="py-op">,</tt> <tt class="py-param">dst</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="RadioRedirect.gain-collapsed" style="display:none;" pad="++" indent="++++++++"></div><div id="RadioRedirect.gain-expanded"><a name="L57"></a><tt class="py-lineno">57</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L58"></a><tt class="py-lineno">58</tt>  <tt class="py-line"><tt class="py-docstring">        Returns the gain between src -&gt; dst.</tt> </tt>
<a name="L59"></a><tt class="py-lineno">59</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L60"></a><tt class="py-lineno">60</tt>  <tt class="py-line"><tt class="py-docstring">        Returns None if they are not connected.</tt> </tt>
<a name="L61"></a><tt class="py-lineno">61</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L62"></a><tt class="py-lineno">62</tt>  <tt class="py-line">        <tt class="py-name">src_node</tt><tt class="py-op">,</tt> <tt class="py-name">dst_node</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-17" class="py-name"><a title="simx.base.tossim" class="py-name" href="#" onclick="return doclink('link-17', 'tossim', 'link-0');">tossim</a></tt><tt class="py-op">[</tt><tt class="py-name">src</tt><tt class="py-op">]</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-18" class="py-name"><a title="simx.base.tossim" class="py-name" href="#" onclick="return doclink('link-18', 'tossim', 'link-0');">tossim</a></tt><tt class="py-op">[</tt><tt class="py-name">dst</tt><tt class="py-op">]</tt> </tt>
<a name="L63"></a><tt class="py-lineno">63</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">src_node</tt><tt class="py-op">.</tt><tt id="link-19" class="py-name"><a title="simx.base.node.Node.get_link" class="py-name" href="#" onclick="return doclink('link-19', 'get_link', 'link-16');">get_link</a></tt><tt class="py-op">(</tt><tt class="py-name">dst_node</tt><tt class="py-op">)</tt> </tt>
</div></div><a name="L64"></a><tt class="py-lineno">64</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Wed Aug 12 00:17:36 2009
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
