<template description="HE" category="tutorial"><line># Requires: PseudoSensor and mote reading from channel 0.</line><line># PseudoSensor support MUST be compiled in</line><line></line><line># This also depends on the files:</line><line># test.sac, dat02.txt, dat01.txt, data.txt relative to data/</line><line>from simx.sensor.streamer import TextStreamer</line><line>import simx.extra.sac.SAC as SAC</line><line></line><line></line><line>noise=-30</line><line>nodeNum=25</line><line>W=5</line><line>H=5</line><line>dir=&quot;data/pixel/&quot;</line><line>picName=&quot;data/pixel/airforce.gif&quot;</line><line></line><line># Pick the first  nodes, starting with Node ID </line><line></line><line>nodes = T[0:(nodeNum)]</line><line>#split the picture</line><line>for n in nodes:</line><line>  #n.useFlatNoiseFloor(-100)</line><line>    n.addNoiseTraceReading(noise)</line><line></line><line>import sys,os</line><line>from PIL import Image</line><line>import ImageDraw</line><line></line><line>im = Image.open(picName)</line><line>width,height = im.size</line><line>#print im.format, im.size, im.mode, width, height</line><line></line><line></line><line>NUM =nodeNum</line><line>wunit=(width/W)</line><line>hunit=(height/H)</line><line></line><line>box = (0,0,wunit,hunit)</line><line>im1 = im.crop(box)</line><line></line><line>for i in range(H):</line><line>		for j in range(W):</line><line>			box = (j*wunit,i*hunit,(j+1)*wunit,(i+1)*hunit)</line><line>			#print box</line><line>			im1 = im.crop(box)</line><line>			pixel1 = im1.load()</line><line>			#print pixel1[0,0]</line><line>			im1.thumbnail(im1.size,Image.ANTIALIAS)</line><line>			index = i*W + j</line><line>	    		filename = dir+str(index)</line><line>			FILE = open(filename,&quot;w&quot;)</line><line>			out_str = ''</line><line>	  		for l in xrange(wunit):</line><line>		    		for k in xrange(hunit):</line><line>					X=l+j*wunit</line><line>					Y=k+i*hunit</line><line>					FILE.write(str(pixel1[l,k]*1000000+Y*1000+X)+'\n')#1000,000,000, x,y,value</line><line>			</line><line>			FILE.write(str(-42)+'\n')</line><line>			FILE.close()</line><line>			im1.save(filename + &quot;.gif&quot;, &quot;gif&quot;)</line><line></line><line></line><line></line><line></line><line></line><line>for node_id in range(0, nodeNum):</line><line>	fn = TextStreamer(&quot;data/pixel/&quot;+str(node_id),</line><line>                       reset_on_eof=False,</line><line>                       eof_value=-42).generator()</line><line>	Sensor.connect(node_id, 0, fn,0,4)</line></template>