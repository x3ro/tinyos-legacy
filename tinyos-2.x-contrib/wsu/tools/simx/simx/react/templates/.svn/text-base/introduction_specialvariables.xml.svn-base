<template description="Special Variables" category="introduction"><line># Act provides uniform access to the simulator through</line><line># the use of certain global variables and convenience functions.</line><line># Again, as with &quot;Introduction: Console, Templates &amp; Commands&quot;</line><line># code within #&gt;&gt; and #&lt;&lt; blocks may be executed.</line><line></line><line>## T</line><line># The T variable is used to interact with the TOSSIM module</line><line># It supports all methods that a normal TOSSIM object supports.</line><line># These include functions such as getNode() and simTime().</line><line># In addition, there are several convenience methods.</line><line></line><line># T[start:count]</line><line># Returns all the nodes, with IDs from START to START+COUNT.</line><line># The nodes may or may not be on. This loads the nodes into</line><line># the local cache.</line><line></line><line># Display first 3 nodes (ID numbers 0, 1 and 2)</line><line># &gt;&gt;</line><line>for node in T[0:3]:</line><line>  print node.id()</line><line># &lt;&lt;</line><line></line><line># T[id]</line><line># Return a specific node. This is the same as T.getNode(id).</line><line># This loads the node into the local cache. (Unline T[A:B],</line><line># this -returns a single node- and not a list).</line><line># &gt;&gt;</line><line>print T[111].id()</line><line># &lt;&lt;</line><line></line><line># T.activeNodes()</line><line># Return a list of all nodes in the local cache (that have been</line><line># accessed in any way, this includes calls through T.getNode())</line><line># If the above commands have been executed, at least nodes</line><line># 0, 1, 2 and 111 should be displayed (more may be displayed</line><line># if they have been accessed elsewhere).</line><line># &gt;&gt;</line><line>for node in T.activeNodes():</line><line>  print node.id()</line><line># &lt;&lt;</line><line></line><line></line><line>WATCH.SINGLE_ADD(0,&quot;OctopusC$fwdBusy&quot;)</line></template>