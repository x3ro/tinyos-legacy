// $Id: Constants.java,v 1.3 2008/03/25 16:24:14 conormuldoon Exp $

/*									tab:4
 * Copyright (c) 2007 University College Dublin.
 * All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose, without fee, and without written agreement is
 * hereby granted, provided that the above copyright notice and the following
 * two paragraphs appear in all copies of this software.
 *
 * IN NO EVENT SHALL UNIVERSITY COLLEGE DUBLIN BE LIABLE TO ANY
 * PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
 * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
 * UNIVERSITY COLLEGE DUBLIN HAS BEEN ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * UNIVERSITY COLLEGE DUBLIN SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND UNIVERSITY COLLEGE DUBLIN HAS NO
 * OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR
 * MODIFICATIONS.
 *
 * Authors:	Raja Jurdak, Antonio Ruzzelli, and Samuel Boivineau
 * Date created: 2007/09/07
 *
 */

/**
 * @author Raja Jurdak, Antonio Ruzzelli, and Samuel Boivineau
 */


/**
 * This class is automatically generated by ncg. DO NOT EDIT THIS FILE.
 * This class includes values of some nesC constants from
 * ../motes/Octopus.h.
 */

public class Constants  {
    public static final byte MODE_AUTO = 1;
    public static final byte SLEEPING = 2;
    public static final byte GET_READING_REQUEST = 10;
    public static final byte SET_AWAKE_DUTY_CYCLE_REQUEST = 14;
    public static final byte SET_THRESHOLD_REQUEST = 4;
    public static final byte MODE_QUERY = 0;
    public static final short DEFAULT_SLEEP_DUTY_CYCLE = 2000;
    public static final short DEFAULT_AWAKE_DUTY_CYCLE = 9000;
    public static final short REPLY_MASK = 224;
    public static final byte SET_PERIOD_REQUEST = 3;
    public static final short AM_OCTOPUS_COLLECTED_MSG = 147;
    public static final byte AWAKE = 0;
    public static final byte SET_MODE_AUTO_REQUEST = 1;
    public static final byte THRESHOLD_REPLY = 96;
    public static final byte GET_PERIOD_REQUEST = 8;
    public static final byte DEFAULT_THRESHOLD = 0;
    public static final byte AM_OCTOPUS_SENT_MSG = 101;
    public static final byte PERIOD_REPLY = 64;
    public static final byte SET_MODE_QUERY_REQUEST = 2;
    public static final byte SLEEP_MASK = 2;
    public static final short DEFAULT_SAMPLING_PERIOD = 1024;
    public static final byte BROADCAST_DIS_KEY = 42;
    public static final byte SLEEP_REQUEST = 6;
    public static final byte SET_SLEEP_DUTY_CYCLE_REQUEST = 13;
    public static final byte DEFAULT_MODE = 1;
    public static final byte AM_OCTOPUS_BROADCAST_MSG = 113;
    public static final short SLEEP_DUTY_CYCLE_REPLY = 128;
    public static final byte NO_REPLY = 0;
    public static final byte BATTERY_AND_MODE_REPLY = 32;
    public static final byte GET_SLEEP_DUTY_CYCLE_REQUEST = 11;
    public static final short AWAKE_DUTY_CYCLE_REPLY = 160;
    public static final byte GET_THRESHOLD_REQUEST = 9;
    public static final byte WAKE_UP_REQUEST = 7;
    public static final short MINIMUM_SAMPLING_PERIOD = 1024;
    public static final byte MODE_MASK = 1;
    public static final byte GET_AWAKE_DUTY_CYCLE_REQUEST = 12;
    public static final byte GET_STATUS_REQUEST = 5;
    public static final byte BOOT_REQUEST=15;
    public static final byte MAX_ID=16;
    public static final int WAIT_TIME=2000;
    public static final int MX_RATE=2400;
}
