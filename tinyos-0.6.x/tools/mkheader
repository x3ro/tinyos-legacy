#!/usr/bin/perl

open(FOO, "$ARGV[0]") or die;

sub getFuncNames{
    local (%names) = @_;
    while(<FOO>){
    if(/\};/){
      return %names;
    }
    $_;
    /([\w\*]+) (\w+)\((.*)\);*/;
    if ($2) {
      $names{$2} = [($1, $3)];
    }
    
  }
  

}

#added SRM 4.9.02
#allow includes in desc files
sub getInclude{
    local ($line) = shift(@_);
    $line;
    /\s*\#include\s+[\"<]([^\"\s]*)/;
    return $1;
}

while(<FOO>){
  if(/^TOS_MODULE (\w+)/){
    $comp = $1;
    last;
  }
}

while(<FOO>){
  if(/ACCEPTS\{/) {    
    %accepts = getFuncNames(%accepts);
  }elsif(/HANDLES\{/) {
    %handles = getFuncNames(%handles);
  } elsif(/SIGNALS\{/) {
    %signals = getFuncNames(%signals);
  } elsif(/USES\{/) {
    %uses = getFuncNames(%uses);
  } elsif(/INTERNAL\{/) {
    %internal = getFuncNames(%internal);
  } elsif(/\#include/) {
    @include[++$#include] = getInclude($_);  
    
  }
  
}


print "#ifndef __" . $comp . "___\n";
print "#define __" . $comp . "___\n";
print "#include \"super.h\"\n";
foreach $i (@include) {
    print "#include \"$i\"\n";
}
print "//ACCEPTS\n";
foreach $comp (sort keys %accepts){
  print ${accepts{$comp}}[0]  . " TOS_COMMAND(" .$comp .")(". ${accepts{$comp}}[1] . ");\n";
}
print "//HANDLES\n";
foreach $comp (sort keys %handles){
  print ${handles{$comp}}[0]  . " TOS_EVENT(" .$comp .")(". ${handles{$comp}}[1] . ");\n";
}
print "//SIGNALS\n";
foreach $comp (sort keys %signals){
  print ${signals{$comp}}[0]  . " TOS_EVENT(" .$comp .")(". ${signals{$comp}}[1] . ");\n";

}
print "//USES\n";
foreach $comp (sort keys %uses){
  print ${uses{$comp}}[0]  . " TOS_COMMAND(" .$comp .")(". ${uses{$comp}}[1] . ");\n"

}
print "//INTERNAL\n";
foreach $comp (sort keys %internal){
  print ${internal{$comp}}[0]  . " " .$comp ."(". ${internal{$comp}}[1] . ");\n"

}
printf "#endif //__"  . $comp . "___//\n";



