/*									tab{4
 *  MAGSZ.comp
MODULE	MAGSZ
PURPOSE	Collects Magnetometer data from MICA SENSOR PCB and sends to radio


------------------------------------------------------------------------------------
REVISION HISTORY
02Feb02	mmiller	created (under duress :)
20Feb20 mmiller changed to interface to AXONN_PACKET handler
====================================================================================
 *
 * "Copyright (c) 2000 and The Regents of the University 
 * of California.  All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose, without fee, and without written agreement is
 * hereby granted, provided that the above copyright notice and the following
 * two paragraphs appear in all copies of this software.
 * 
 * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT
 * OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF
 * CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION TO
 * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS."
 *
 *
 ***********************************************************************************/

TOS_MODULE MAGSZ;

ACCEPTS{
	char MAGSZ_INIT(void);
	char MAGSZ_START(void);
	char MAG_POT_ADJUST(char val);	
};

SIGNALS{
};

HANDLES{
	void MAGSZ_CLOCK_EVENT(void);
	char MAGSZ_DATA_EVENT_2(short data);
	char MAGSZ_DATA_EVENT_3(short data);
	char MAGSZ_DATA_EVENT_4(short data);
	char MAGSZ_DATA_EVENT_5(short data);
	char MAGSZ_DATA_EVENT_6(short data);
	char MAGSZ_SET_POT_X_DONE(char success);
	char MAGSZ_SET_POT_Y_DONE(char success);
	char MAGSZ_MSG_SEND_DONE(TOS_MsgPtr msg);
};

USES{
	char MAGSZ_CLOCK_INIT(char interval, char scale);
	char MAGSZ_ADC_INIT(void);
	char MAGSZ_TEMP_INIT(void);
	char MAGSZ_MAG_INIT(void);
	char MAGSZ_ACCEL_INIT(void);
	char MAGSZ_GET_MAG_XDATA();
	char MAGSZ_GET_MAG_YDATA();
	char MAGSZ_GET_TEMP_DATA();
	char MAGSZ_GET_ACCEL_XDATA();
	char MAGSZ_GET_ACCEL_YDATA();
	char MAGSZ_SET_POT_X(char val);
	char MAGSZ_SET_POT_Y(char val);
	char MAGSZ_SUB_INIT();
	char YELLOW_LED_TOGGLE(void);
	char RED_LED_TOGGLE(void);
	char GREEN_LED_TOGGLE(void);
	char SUB_POT_INIT(void);
	char MAGSZ_SEND_MSG(short addr, char type, TOS_MsgPtr);
};

