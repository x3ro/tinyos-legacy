/*									tab:4
 *
 *
 * "Copyright (c) 2000 and The Regents of the University 
 * of California.  All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose, without fee, and without written agreement is
 * hereby granted, provided that the above copyright notice and the following
 * two paragraphs appear in all copies of this software.
 * 
 * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT
 * OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF
 * CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION TO
 * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS."
 *
 * Authors:		Philip Levis
 *
 * This component is responsible for packet reception/transmission
 * initiation; it detects start symbols and synchronizes the radio clock
 * for optimal bit reading, then passes control to an actual data reading
 * component to handle network data. This component is fully compatible
 * with SEC_DED_RADIO_BYTE.
 */


TOS_MODULE MAC_LP;

ACCEPTS{
	char MAC_INIT(void);
	char MAC_TX_BYTES(char data);
};
HANDLES{
	char MAC_RX_IDLE_START();
	char MAC_RX_IDLE_BIT_EVENT(char bit);

	char MAC_RX_SYNC_START();
	char MAC_RX_SYNC_BIT_EVENT(char bit);

	char MAC_RX_START_START();
	char MAC_RX_START_BIT_EVENT(char bit);

	char MAC_TX_MAC_START(void);
	char MAC_TX_MAC_BIT_EVENT(char bit);

	char MAC_TX_SYNC_START(void);
	char MAC_TX_SYNC_BIT_EVENT(void);

	char MAC_TX_START_START(void);
	char MAC_TX_START_BIT_EVENT(void);

};
USES{
	char MAC_SUB_INIT(void);
	char MAC_SUB_TX_BIT(char data);
	char MAC_SUB_PWR_OFF(short timer);
	char MAC_SUB_PWR_ON(short bitrate);
	char MAC_SUB_SET_BIT_RATE(short bitrate);

	char MAC_SUB_RX_IDLE_ACTIVATE();
	char MAC_SUB_RX_SYNC_ACTIVATE();
	char MAC_SUB_RX_START_ACTIVATE();
	char MAC_SUB_RX_DATA_ACTIVATE();

	char MAC_SUB_TX_MAC_ACTIVATE();
	char MAC_SUB_TX_SYNC_ACTIVATE();
	char MAC_SUB_TX_START_ACTIVATE();
	char MAC_SUB_TX_DATA_ACTIVATE();

	short MAC_SUB_NEXT_RAND(void);

	char MAC_SUB_SAMPLE_RSSI(char);
};
