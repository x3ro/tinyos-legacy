/*
 * COMMAND.comp
 *
 * "Copyright (c) 2000 and The Regents of the University
 * of California.  All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose, without fee, and without written agreement is
 * hereby granted, provided that the above copyright notice and the following
 * two paragraphs appear in all copies of this software.
 *
 * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT
 * OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF
 * CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION TO
 * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS."
 *
 * Authors:  Rob Szewczyk
 *           Kamin Whitehouse
 * History:  Created along time ago
 * 	     2/10/02 modified by kamin
 *
 *
 * This component interprets packets that are structured as commands that 
 * are sent to AM_handler 8.
 * It also has an interface to receive commands from other components.
 * 
 *
 */

//#define command_bfrPtr command_bfr*

TOS_MODULE COMMAND;
JOINTLY IMPLEMENTED_BY COMMAND;

ACCEPTS{
	char COMMAND_INIT();
	char COMMAND_START();
	char COMMAND_EXECUTE(char* cmd);
};

SIGNALS{
	char COMMAND_DONE(char* cmd, char success);
};

USES{
        char COMMAND_OSCOPE_RESET_SAMPLE_COUNT(void);
        char COMMAND_OSCOPE_SET_BYTES_PER_SAMPLE(char BytesPerSample);
        char COMMAND_OSCOPE_SET_MAX_SAMPLES(char maxSamples);
        char COMMAND_OSCOPE_SET_SEND_TYPE(char sendType);
        char COMMAND_OSCOPE_SET_DATA_CHANNEL(char channel);
      	char COMMAND_SUB_INIT(void);
	char COMMAND_CLOCK_INIT(char interval, char scale);
	char COMMAND_START_SENSING(void);
	char COMMAND_STOP_SENSING(void);
	char COMMAND_YELLOW_LED_ON(void);
	char COMMAND_YELLOW_LED_OFF(void);
	char COMMAND_RED_LED_ON(void);
	char COMMAND_RED_LED_OFF(void);
	char COMMAND_GREEN_LED_ON(void);
	char COMMAND_GREEN_LED_OFF(void);
	void COMMAND_SET_POT(char);
	void COMMAND_POT_INC(void);
	void COMMAND_POT_DEC(void);
	char COMMAND_SET_TX_MODE(void);
	char COMMAND_SET_RX_MODE(void);
	char COMMAND_SET_TX_BIT(char);
	char COMMAND_SET_LEDS(short);
	char COMMAND_SET_MIC_GAIN(char);
	char COMMAND_SET_COMM_POWER_MODE(char);
};


HANDLES{
	TOS_MsgPtr COMMAND_MSG(TOS_MsgPtr msg);
	char COMMAND_SEND_DONE(TOS_MsgPtr msg);
	char COMMAND_CMD_DONE(char* cmd, char success);
};



