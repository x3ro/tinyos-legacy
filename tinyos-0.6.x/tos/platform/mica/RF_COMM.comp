/*									tab:4
 *
 *
 * "Copyright (c) 2000 and The Regents of the University 
 * of California.  All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose, without fee, and without written agreement is
 * hereby granted, provided that the above copyright notice and the following
 * two paragraphs appear in all copies of this software.
 * 
 * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT
 * OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF
 * CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION TO
 * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS."
 *
 * Authors:		Jason Hill
 *
 * This modules collects bytes from the byte layer and passes up a packet
 * at a time to the higher layers.  It also accepts packets and feeds them down
 * to the lower levels.
 *
 */

TOS_MODULE RF_COMM;
JOINTLY IMPLEMENTED_BY RF_COMM;
ACCEPTS{
	char PACKET_TX_PACKET(TOS_MsgPtr data);
	void PACKET_POWER(char mode);
	char PACKET_INIT(void);
	char RF_COMM_SET_SOUNDER_LENGTH(char numBytes);
	char RF_COMM_LISTEN_FOR_RANGING(char boolean);
};

SIGNALS{ 
	char PACKET_TX_PACKET_DONE(TOS_MsgPtr packet);
	TOS_MsgPtr PACKET_RX_PACKET_DONE(TOS_MsgPtr packet);
};

HANDLES{
	char PACKET_RX_BYTE_READY(char data, char error);
	char PACKET_TX_BYTE_READY(char success);
	char PACKET_BYTE_TX_DONE();
	char PACKET_SUB_DATA_SEND_READY(char data);
	char PACKET_SUB_START_SYM_DETECT();
	char PACKET_SUB_CHANNEL_IDLE();
	char PACKET_SUB_RADIO_ENCODE_DONE(char d1);
	char PACKET_SUB_RADIO_DECODE_DONE(char d1, char error);
	char RF_COMM_MIC_SIGNAL_TONE_DETECTED(void);
};
USES{
	char PACKET_SUB_RADIO_ENCODE(char d1);
	char PACKET_SUB_RADIO_ENCODE_FLUSH();
	char PACKET_SUB_RADIO_DECODE(char d1);
	char PACKET_SUB_FIFO_IDLE(void);
	char PACKET_SUB_FIFO_SEND(char data);
	char PACKET_SUB_FIFO_READ(short timing);
	char START_SYMBOL_SEARCH();
	char PACKET_SUB_INIT();
	char MONITOR_CHANNEL();
	char MONITOR_CHANNEL_INIT();
	int PACKET_SUB_GET_TIMING();
	char PACKET_SUB_ENCODE_BYTES(char byte);
	char PACKET_SUB_DECODE_BYTE(char d1, char d2);
	char PACKET_SUB_MAC_DELAY();
	char RF_COMM_READ_TONE_DETECTOR();
        char RF_COMM_LEDy_on();
        char RF_COMM_LEDy_off();
	char RF_COMM_LEDy_TOGGLE();
        char RF_COMM_LEDr_on();
        char RF_COMM_LEDr_off();
        char RF_COMM_LEDr_TOGGLE();
        char RF_COMM_LEDg_on();
        char RF_COMM_LEDg_off();
        char RF_COMM_LEDg_TOGGLE();
};
	

